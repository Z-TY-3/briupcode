1. 介绍



	李春雨sss是是是
阿三大苏打sad asd as dasssssss阿萨德啊是啊
2. 引入
	项目研发（项目储备）
	1) estore (电子商城)
		1. 后台管理子模块
			数据来源 （数据库）
			后台管理系统
			分类管理（
			商品管理
			品牌管理
			订单管理
			...
		2. 购物子模块
			浏览首页
			筛选
			列表页面
			查看商品详情
			添加购物车
			提交订单
			...
	2) estore - 企业级要求
		架构
			springboot
			spring 
			springmvc 
			mybatis
			mybatis-generator
			mysql
			poi				（excel）
			fastdfs 	(分布式附件服务器)
			spring security(自己封装 jwt)
			git 		版本控制（svn）
			github	代码中央仓库（团队协作）

		大前端（web + 移动互联 + 小程序公众号）
			html/css/js
			android
			jquery h5api
			vue vuex vuerouter
			cordova
			weex
3. 思考
	什么是前后台分离开发
	什么是大前端开发，大前端开发中包含了哪些东西
	如果你是一个项目经理，你如何去调度资源来进行开发？
		婚纱摄影
			婚纱照
			公众号（宣传）
			预约下单
		会员管理
		支付对接
		文件传递
		插件（提升工作效率）

	大厂（BAT）
		JavaEE（综合实力）
			后台 - 前端

	创业
		各个体系比较熟悉

4. 课程安排（大前端基础）
	html5
	css3
	android基础（cordova,weex）
	js基础

5. Html基础
	1. 环境搭建
		1) 编辑器环境
			轻量级的编辑
			sublime(emmet插件)
			vscode *
		2) 浏览器环境（测试）
			firefox
			google chrome
			opera
			safari
			ie8+ 兼容性
	2. hello world
		编写代码 -> 运行测试 -> 交付（部署）【网站】
			1） 部署在tomcat中( 动态服务器- 慢)
				tomcat/webapps/
					hello.html
			2) 部署在静态服务器（apache/nginx）
				阿里云（ubuntu16.04）134.175.154.93
					jdk
					mysql
					apache
						/var/www/html
					tomcat

		编写代码 -> 编译代码 ->测试 -> 打包 （jar/war）
		目录管理
			d:/briup
				javaee
					eclipse
					tomcat
					maven
					workspace
					...
				webui
					html
					css
					js
	3. html结构
		超文本标记语言
			超级文本（文本,超级链接,图片，视频，音频...）
		doctype声明 	
			HTML5:
				<!DOCTYPE html> 
			HTML4:
				<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">	
		html主体结构
			<html>
				<head>
					<!--源信息 -->
					<meta charset="UTF-8">

				</head>
				<body>
					<!--可以显示在网页中的内容-->
				</body>
			</html>

		xml
			标签是可以自定义的
		html
			所有的标签都是内置的
			<h1>一级标题</h1>

		语法
			html由各种元素组成，一个元素通常包含开始标签，结束标签，内容
			在开始标签中可以添加属性

			<div class="content" id="one">
				<span>hello world</span>
			</div>

			属性
			1) 核心属性：id、title、style、class
				绝大多数元素都具备的属性
			2) 特有属性
				某些元素中特有的属性
					a 		
						href 
						target
					img 	
						src 
						width 
						height
	4. html那些事
		Java 
			编译型语言
			.java -> .class -> jvm

			隶属于sun/oracle公司的，有具体的公司及团队维护，所有的标准oracle说了算，jvm也是oracle开发的

			语法升级 	拉姆达
			jvm升级（解释java代码）
			效果升级 
			springboot写完代码之后如何部署
				1) 打包成为war,直接抛在tomcat/webapps，war就会自动解压
				2) 打包成为jar,直接运行jar(内置了tomcat)

		html
			解释型语言
			.html -> 浏览器

			网页编程标准，w3c
			h4 -> h5

			语法升级 	
				废弃掉 strong frameset ...
				新增		header article section...
			解释器
				火狐，谷歌，欧朋...
				容错性非常棒
			效果升级

	5. 标签
		学什么？
			标签含义
			如何使用标签(语义)
			默认样式重置 h1

			丰田霸道 45w左右 卤素 led ; 硬塑料 真皮; 轮毂

		1) 块级别标签
			作用：搭建网页的结构
			特点：宽度默认占满父元素,高度默认由内容决定,宽高可以自定义
				<div>
					<ul>
						<li></li>
					</ul>
				</div>

			div 			【容器】无意义的块元素（无招胜有招）
			h1~h6 		标题
			p 				段落
			ul>li 		【容器】列表
			ol>li 		【容器】列表
			dl>dd,dt 	【容器】列表


			<div class="content">
				<div class="wrap">
					<h1 class="header"></h1>
					<div class="products">
						<ul>
							<li></li>
							<li></li>
							<li></li>
							<li></li>
							<li></li>
							<li></li>
							<li></li>
						</ul>
					</div>
				</div>
			</div>

		2) 行级别标签
			作用：填充网页
			特点：默认宽高由内容决定；宽高无法指定；所有的行内元素可以共享一行空间;行内元素内部一般不允许嵌套子元素，只允许放文本

			span 			无意义的行内元素
			a 				超链接
				href 
				target
			img 			图片
				src
				alt 	当图片找不到的时候的文本替代
			strong b em i sub sup d ...

			<span>hello</span>
			<a href="">百度一下</a>

	6. css入门
		三要素：
			1) html (网页骨架) 	块 ，行 （table/form）
			2) css（页面装饰，布局，动画过渡效果）
				原则：对于动画效果能用css实现的绝对不用js
			3) Javascript（树莓派）
				动态DOM, 类似于jstl
				数据交互
		如何在html中使用css(3种方式)
			1) 嵌入在标签内部
					将css代码写在了html中，较为混乱
					复用性较低

					好处：优先级高，简单直接（修改别人代码的时候，weex rn）
			2) 集中嵌入在style标签中
					
			3) 将css独立写在外部的css文件中，并且通过link导入进来
				适用于企业级开发
		css语法
			选择器 {
				/*规则*/
				color:#ffffff;
				background-color:pink;
			}
			

	7. css选择器 (jQuery选择器)
		1) 核心选择器
			用法：选择较大范围
			1. 标签（元素）选择器
				div {}
				h1 {}
			2. id选择器
				#one {}
				<div id="one">one</div>
				<div id="two">two</div>
			3. class选择器
				.first {}
				<div id="one" class="first">one</div>
				<div id="two" class="first">two</div>
				<div id="three" class="first">one</div>
				<div id="four" class="second">two</div>
				<p id="five" class="first">p</div>
			词穷！！！
			4. 并且选择器
				div.first {}
				p#five {}
			5. 或者选择器
				div,.first {}
			6. 普遍选择器
				* 	
		2) 层次选择器【一般不超过5层】
			1. 子代选择器
				.top_nav > ul > li
				选中class为top_nav的元素的直接后代ul元素的直接后代li元素
			2. 后代选择器
				.top_nav li				
			3. 下一个兄弟选择器
				.top_nav li + *
			4. 之后所有兄弟选择器
				.top_nav li ~ *
		3) 过滤器
			对已经选择到的元素进行过滤
			1. 属性过滤器
				selector[name]	已选择到的元素具有name属性
				selector[name=v]	已选择到的元素具有name属性，并且name属性的值为v
				selector[name^=v]	已选择到的元素具有name属性，并且name属性的值以'v'开头
				selector[name$=v]	已选择到的元素具有name属性，并且name属性的值以'v'结尾
				selector[name*=v]	已选择到的元素具有name属性，并且name属性的值中包含了'v'
			2. 伪类过滤器
				以:开头的
				selector:first-child 	过滤出已选择元素中的是第一个孩子的元素
				selector:last-child 	
				selector:nth-child(2)
				selector:nth-child(even)
				selector:nth-child(odd)
				selector:nth-child(3n+1)
				selector:only-child
				selector:not(selector)
				...

				selector:hover
				selector:active
				selector:visited
				selector:focus
			3. 伪元素过滤器
				可以产生出来一个虚拟元素（行内元素）
				以::开头的
				div::before {

				}
				div::after {

				}
				<div>
					::before
					<p>one</p>
					<p>two</p>
					::after
				</div>
	8. 规则【简单大方】
		单位值
			px 	像素 
		字体【设计师-架构师规定】
		【可以被继承】
			<div style="font-size:12px">
				one
				<div>
					two
				</div>
			</div>

			font-size 	字体大小 	默认16px 	
			font-weight 字体粗细程度
				normal【默认】
				bold 		加粗
				bolder	比当前元素上继承的值要大一些
				100~900
			font-style 	风格 （是否打开斜体）
				normal【默认】
				italic
			font-family 	字体族
			line-height 	行高
				绝对单位：1px 
			速写
			font: [font-weight] [font-style] font-size/line-height font-family

		网络字体（字体图标库）
			iconfont【阿里巴巴的字体图标库】
			1. 选取自己想要图标
			2. 生成项目
			3. 按照说明进行使用
		
		文本【可以被继承】
			text-align
				left 	居左排列
				center
				right	
			text-indent 	文本缩进
			text-decoration
				line-through
				overline
				underline
				none
			text-transform 	字体大小写转换
				uppercase
				lowercase
		列表
			list-style:none
		盒子
			margin
			padding
			border
			width
			height
		背景
			background-color 	背景色
				关键字 		teal	red 	black white
				十六进制	#ffffff 	#000000 	#ff0000
				rgb函数 	rgb(255,255,255)
				rgba函数 	rgba(0,0,0,.5)
      background-clip 	背景覆盖区域
				border-box 	边框及边框以内全部覆盖
				padding-box 内边距及内边距以内全部覆盖
				content-box 内容区域全部覆盖
      background-origin: border-box;
				背景图铺设的起点
      background-image: url('./images/a.jpg');
				背景图
      background-repeat: no-repeat;
				背景图的重复方式
      background-size: contain;
				背景图的覆盖方式
      background-position: 50px 50px;
				关键字 center
				坐标点 1px 2px
				背景图开始铺设的坐标
			backgroud:
				速写形式
	9. css布局 *
		布局就是为了解决多个块元素在一行中显示的问题。
		0) 默认文档流
			块元素从上往下进行排列
		1) 浮动布局
			float:left;
				向左侧浮动
			clear:left;
				当前元素左侧不允许有浮动元素，换行
			display:block;
				将一个元素设置为块元素
				<span style="display:block"></span>
				
			应该加在块元素上
			1> 特点：
				1. 宽高默认由内容决定（一般要给浮动元素指定宽度）
				2. 脱离文档流，在默认文档流不会再占据空间
				3. 在同一层次中，所有的浮动元素会在一行显示，当一行中无法容纳这些浮动元素的时候，就会自动换行
				4. 浮动元素会失去对父元素的支撑
			2> 浮动元素的父元素没有高度的问题
				1. 所有子元素浮动，通过伪元素进行支撑
				2. 保留一个子元素不浮动，用于支撑父元素，为了让他显示出来，可以加margin

		2) 定位布局
			position:static; 【静态】

      position:relative
      position:absolute
      position:fixed
      position:sticky

			如果一个元素具有position规则，并且规则值为relative,absolute,fixed,sticky之一,那么，我就认为这个元素是一个定位元素；只有定位元素才能使用如下规则：
				left:
				right:
				bottom:
				top:

			相对定位
      	position:relative
				特点：
					1. 相对于当前元素所在位置
					2. 当前元素不会脱离文档流(即使发生了移动也不会被其他元素抢占位置)
				应用：
					一般情况下相对定位要配合绝对定位来进行移动

			绝对定位
      	position:absolute
				特点：
					1. 相对于距离它最近的父定位元素，如果它的父元素没有定位元素，那就相对于浏览器视口
					2. 脱离文档流（不占据默认文档流的空间；块元素的宽度不再为100%）
			固定定位
      	position:fixed
				特点：
					1. 相对于浏览器视口
					2. 脱离文档流（不占据默认文档流的空间；块元素的宽度不再为100%）
					3. 不会随着屏幕的移动而移动
			
			粘滞定位(补充)


		=) 案例
			1. 块元素居中
				给块元素一个宽度
				margin:0 auto;

	10. 选择器的优先级 *
		Importance 		特权
			!important
		Specificity 	权重（积分机制）
			1000 	style属性中
			100 	id选择器
			10 		类选择器，伪类过滤器，属性过滤器
			1 		元素选择器，伪元素选择器
		Source order 	顺序

	11. 问题反馈及
